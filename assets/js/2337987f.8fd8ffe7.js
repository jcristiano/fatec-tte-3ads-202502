"use strict";(self.webpackChunkfatec_tte_3_ads_202502=self.webpackChunkfatec_tte_3_ads_202502||[]).push([[4928],{4902:(e,a,o)=>{o.d(a,{A:()=>s});const s=o.p+"assets/files/A-Crise-Evolucao-e-o-Futuro-da-Engenharia-de-Software-945d84d302df4d30ddf4c72b0496f31e.pdf"},4967:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>t,contentTitle:()=>d,default:()=>m,frontMatter:()=>n,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"IES200/crise_engenharia/fundamentos","title":"Debate sobre a crise do software","description":"A engenharia de software tem sido marcada por um ciclo cont\xednuo de crises, evolu\xe7\xe3o e novos desafios, culminando na situa\xe7\xe3o atual de \\"regress\xe3o disfar\xe7ada de produtividade\\" [1]. Esta jornada nos leva desde os prim\xf3rdios ca\xf3ticos at\xe9 a era da Intelig\xeancia Artificial (IA), que, apesar das promessas, introduziu novos problemas e exacerbou falhas antigas [1-5].","source":"@site/docs/IES200/05-crise_engenharia/01-fundamentos.md","sourceDirName":"IES200/05-crise_engenharia","slug":"/IES200/crise_engenharia/fundamentos","permalink":"/fatec-tte-3ads-202502/docs/IES200/crise_engenharia/fundamentos","draft":false,"unlisted":false,"editUrl":"https://github.com/jcristiano/fatec-tte-3ads-202502/tree/main/docs/IES200/05-crise_engenharia/01-fundamentos.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Debate sobre a crise do software"},"sidebar":"tutorialSidebar","previous":{"title":"Crise da Engenharia","permalink":"/fatec-tte-3ads-202502/docs/category/crise-da-engenharia"},"next":{"title":"ISO100","permalink":"/fatec-tte-3ads-202502/docs/category/iso100"}}');var r=o(4848),i=o(8453);const n={sidebar_position:1,title:"Debate sobre a crise do software"},d="A Crise Perene e a Evolu\xe7\xe3o da Engenharia de Software",t={},c=[{value:"Origens e a Primeira Crise do Software (D\xe9cadas de 1960 e 1970)",id:"origens-e-a-primeira-crise-do-software-d\xe9cadas-de-1960-e-1970",level:2},{value:"A Era de Ouro: Busca por Ordem e Qualidade (D\xe9cadas de 1970 a 2000)",id:"a-era-de-ouro-busca-por-ordem-e-qualidade-d\xe9cadas-de-1970-a-2000",level:2},{value:"Novos Vil\xf5es e a Crise de Significado",id:"novos-vil\xf5es-e-a-crise-de-significado",level:2},{value:"A Era da IA e a &quot;Cracol\xe2ndia Digital&quot;",id:"a-era-da-ia-e-a-cracol\xe2ndia-digital",level:2},{value:"O Caminho \xe0 Frente: Responsabilidade e Conhecimento",id:"o-caminho-\xe0-frente-responsabilidade-e-conhecimento",level:2},{value:"Material Complementar",id:"material-complementar",level:2}];function l(e){const a={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"a-crise-perene-e-a-evolu\xe7\xe3o-da-engenharia-de-software",children:"A Crise Perene e a Evolu\xe7\xe3o da Engenharia de Software"})}),"\n",(0,r.jsx)(a.p,{children:'A engenharia de software tem sido marcada por um ciclo cont\xednuo de crises, evolu\xe7\xe3o e novos desafios, culminando na situa\xe7\xe3o atual de "regress\xe3o disfar\xe7ada de produtividade" [1]. Esta jornada nos leva desde os prim\xf3rdios ca\xf3ticos at\xe9 a era da Intelig\xeancia Artificial (IA), que, apesar das promessas, introduziu novos problemas e exacerbou falhas antigas [1-5].'}),"\n",(0,r.jsx)(a.h2,{id:"origens-e-a-primeira-crise-do-software-d\xe9cadas-de-1960-e-1970",children:"Origens e a Primeira Crise do Software (D\xe9cadas de 1960 e 1970)"}),"\n",(0,r.jsxs)(a.p,{children:["A disciplina de engenharia de software, como a conhecemos hoje, n\xe3o existia formalmente antes da d\xe9cada de 1960 [6, 7]. A programa\xe7\xe3o era ",(0,r.jsx)(a.strong,{children:"manual"}),", feita em cart\xf5es perfurados ou diretamente em linguagens de m\xe1quina e Assembly, sendo ",(0,r.jsx)(a.strong,{children:"altamente propensa a erros"})," [6, 7]."]}),"\n",(0,r.jsxs)(a.p,{children:["Em 1968, numa confer\xeancia da OTAN na Alemanha, os maiores especialistas da \xe9poca cunharam o termo ",(0,r.jsx)(a.strong,{children:'"Crise do Software"'})," [6, 8]. As principais caracter\xedsticas dessa crise inclu\xedam:"]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Projetos atrasavam meses ou anos"})," e os or\xe7amentos estouravam [8, 9]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Sistemas falhavam frequentemente"})," sem explica\xe7\xe3o clara [8, 9]."]}),"\n",(0,r.jsxs)(a.li,{children:["O ",(0,r.jsx)(a.strong,{children:'c\xf3digo era uma "verdadeira bagun\xe7a"'}),", sem organiza\xe7\xe3o, padr\xf5es ou separa\xe7\xe3o de responsabilidades [8, 9]."]}),"\n",(0,r.jsxs)(a.li,{children:["A manuten\xe7\xe3o era um pesadelo, levando \xe0 mentalidade de ",(0,r.jsx)(a.strong,{children:'"Se funcionou, deixa assim"'})," [8, 9]."]}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["As causas dessa crise original foram o ",(0,r.jsx)(a.strong,{children:"descompasso entre o avan\xe7o do hardware e a habilidade dos programadores"})," de organizarem o desenvolvimento, uma ",(0,r.jsx)(a.strong,{children:"crise de oferta"})," (demanda maior que a capacidade de desenvolvimento) e uma ",(0,r.jsx)(a.strong,{children:"crise de manuten\xe7\xe3o"}),' [10, 11]. Percebeu-se que a "crise" n\xe3o era tempor\xe1ria, mas sim um conjunto de ',(0,r.jsx)(a.strong,{children:"problemas perenes inerentes \xe0 complexidade do desenvolvimento de software"})," [12, 13]."]}),"\n",(0,r.jsx)(a.h2,{id:"a-era-de-ouro-busca-por-ordem-e-qualidade-d\xe9cadas-de-1970-a-2000",children:"A Era de Ouro: Busca por Ordem e Qualidade (D\xe9cadas de 1970 a 2000)"}),"\n",(0,r.jsx)(a.p,{children:"Em resposta ao caos, a d\xe9cada de 1970 marcou o in\xedcio da formaliza\xe7\xe3o do desenvolvimento de software [14, 15]."}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Programa\xe7\xe3o Estruturada"}),": Em 1970, Edsger Dijkstra denunciou o uso desenfreado do GOTO e prop\xf4s a ",(0,r.jsx)(a.strong,{children:"programa\xe7\xe3o estruturada"}),", baseada em sequ\xeancia, condi\xe7\xe3o (if-else) e repeti\xe7\xe3o (loop), visando um fluxo de programa previs\xedvel e leg\xedvel [7, 15-17]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Encapsulamento de Decis\xf5es"}),": Em 1972, David Parnas introduziu o conceito de ",(0,r.jsx)(a.strong,{children:"esconder a complexidade interna"})," de um m\xf3dulo de software, expondo apenas uma interface limpa [15, 16]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Linguagens de Programa\xe7\xe3o"}),": Linguagens como Pascal, Algol, Modula e Ada surgiram, incentivando a clareza, modulariza\xe7\xe3o e legibilidade, enquanto Cobol, Fortran e Assembly ainda dominavam a ind\xfastria [15, 18]."]}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["A d\xe9cada de 1980 viu a ",(0,r.jsx)(a.strong,{children:"Engenharia de Software"})," ganhar for\xe7a como disciplina, tratando o software como algo que requer ",(0,r.jsx)(a.strong,{children:"arquitetura e engenharia"})," [15, 19]."]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Programa\xe7\xe3o Orientada a Objetos (POO)"}),": Originada na d\xe9cada de 1960 (Simula 67) e refinada na d\xe9cada de 1970 (Smalltalk), a POO foi popularizada nos anos 80 com linguagens como C++ e Objective C [19-21]. Sua proposta era ",(0,r.jsx)(a.strong,{children:"quebrar o software em partes menores, reutiliz\xe1veis e isoladas"}),', cada uma com uma \xfanica responsabilidade, mudando a mentalidade do programador para a de um "arquiteto de solu\xe7\xf5es" [20-22].',"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["Os pilares da POO incluem ",(0,r.jsx)(a.strong,{children:"encapsulamento, heran\xe7a, polimorfismo e abstra\xe7\xe3o"})," [23, 24]."]}),"\n",(0,r.jsx)(a.li,{children:"A POO veio resolver problemas de modularidade, reusabilidade, manutenibilidade e escalabilidade, permitindo modelar o dom\xednio de forma mais natural [22, 25]."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["Os anos 90 foram um per\xedodo de ",(0,r.jsx)(a.strong,{children:'"boom" e padroniza\xe7\xe3o'})," [21, 26]."]}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Design Patterns"}),': Em 1994, o livro "Design Patterns" catalogou 23 padr\xf5es de projeto (como Decorator, Factory, Strategy, Observer), criando um ',(0,r.jsx)(a.strong,{children:'"vocabul\xe1rio universal"'})," para a comunidade t\xe9cnica e fornecendo solu\xe7\xf5es testadas para problemas comuns [21, 23, 27, 28]. Eles representam uma ",(0,r.jsx)(a.strong,{children:"fus\xe3o entre estrat\xe9gia e arquitetura"})," [29, 30]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Java"}),": Lan\xe7ado em 1995, Java popularizou definitivamente a POO no mundo corporativo, tornando-a o ",(0,r.jsx)(a.strong,{children:'"padr\xe3o obrigat\xf3rio do mercado"'})," devido ao seu foco em portabilidade e legibilidade [31, 32]."]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:'A d\xe9cada de 2000 consolidou essa evolu\xe7\xe3o, sendo considerada por muitos a "era de ouro da engenharia de software" [33, 34].'}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Princ\xedpios SOLID"}),": Robert Martin sintetizou conhecimentos para evitar c\xf3digo fr\xe1gil, acoplado e bagun\xe7ado, promovendo um design de c\xf3digo consciente [32, 33, 35, 36]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Manifesto \xc1gil"}),": Em 2001, 17 desenvolvedores criaram o manifesto, buscando alternativas mais ",(0,r.jsx)(a.strong,{children:"flex\xedveis, colaborativas e focadas na entrega de valor"})," ao cliente, em contraste com metodologias r\xedgidas da \xe9poca [33, 37]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Domain-Driven Design (DDD)"}),": Eric Evans, em 2003, prop\xf4s modelar o software olhando para o ",(0,r.jsx)(a.strong,{children:"dom\xednio do neg\xf3cio"}),", garantindo que desenvolvedores e especialistas falassem a mesma l\xedngua [34, 37]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Clean Code"}),': Robert Martin publicou "Clean Code" em 2008, defendendo c\xf3digo limpo, fun\xe7\xf5es pequenas, responsabilidades bem definidas e testes automatizados [38].']}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Object Calisthenics"}),": Jeff Bay trouxe nove regras de ouro para for\xe7ar um c\xf3digo coeso e desacoplado [38]."]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"novos-vil\xf5es-e-a-crise-de-significado",children:"Novos Vil\xf5es e a Crise de Significado"}),"\n",(0,r.jsx)(a.p,{children:"Apesar da excel\xeancia t\xe9cnica alcan\xe7ada, essa era tamb\xe9m deu origem a novos problemas:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Overengineering"}),": O ",(0,r.jsx)(a.strong,{children:"excesso de engenharia e complexidade desnecess\xe1ria"}),' surgiu quando princ\xedpios viraram dogmas e padr\xf5es se tornaram obriga\xe7\xf5es. Problemas simples recebiam "arquiteturas de guerra", sufocando a simplicidade e confundindo complexidade com senioridade [39-43]. Essa pr\xe1tica foi temporariamente silenciada pela recess\xe3o global de 2007-2008, mas ressurgiu [40, 42].']}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Crise de Significado"}),': Uma "crise de significado" \xe9 enfrentada no s\xe9culo XXI, caracterizada pela ',(0,r.jsx)(a.strong,{children:"abund\xe2ncia de fatos e escassez de compreens\xe3o e sabedoria"}),", resultando em alto ",(0,r.jsx)(a.em,{children:"turnover"}),' e confus\xe3o sobre prop\xf3sitos individuais e organizacionais [4, 44-49]. O foco excessivo em "quem, quando, o qu\xea e onde" levou \xe0 perda do "sentido" do que est\xe1 sendo constru\xeddo [47, 49, 50].']}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Underengineering"}),": Com o boom dos ",(0,r.jsx)(a.em,{children:"smartphones"})," e a corrida por presen\xe7a digital (p\xf3s-2010), a press\xe3o por velocidade e ",(0,r.jsx)(a.strong,{children:'"entrega, entrega e entrega"'})," levou \xe0 ",(0,r.jsx)(a.strong,{children:"distor\xe7\xe3o das metodologias \xe1geis"}),' [41, 43, 51, 52]. O programador se tornou um "entregador de tickets", sacrificando arquitetura e qualidade [43, 52]. A pandemia de COVID-19 intensificou essa press\xe3o, com sistemas sendo feitos "sem estrutura nenhuma", regras de neg\xf3cio jogadas em ',(0,r.jsx)(a.em,{children:"controllers"}),", e falta de testes e design, priorizando a velocidade sobre a qualidade e a sustentabilidade [43, 52-54]."]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"a-era-da-ia-e-a-cracol\xe2ndia-digital",children:'A Era da IA e a "Cracol\xe2ndia Digital"'}),"\n",(0,r.jsx)(a.p,{children:"A mais recente reviravolta veio com a ascens\xe3o da Intelig\xeancia Artificial Generativa [54, 55]."}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Promessas da IA"}),': Ferramentas como GPT3 (2020), GitHub Copilot (2021), ChatGPT, Gemini, Cursor e Claude surgiram, prometendo gerar c\xf3digo, explicar, refatorar e analisar, com a sedutora ideia de "digite um coment\xe1rio e ganhe um bloco de c\xf3digo funcional" [54-56].']}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Efeitos Colaterais"}),": Rapidamente, come\xe7aram a surgir problemas como ",(0,r.jsx)(a.strong,{children:"c\xf3digo duplicado, vulnerabilidades, solu\xe7\xf5es de proced\xeancia duvidosa e sistemas fr\xe1geis"})," [56, 57]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:'A "Mediocridade Regurgitada"'}),": O problema fundamental \xe9 que a ",(0,r.jsx)(a.strong,{children:'IA foi treinada com "nossa mediocridade"'}),' [57-59]. Ela aprendeu com "c\xf3digo lixo" de reposit\xf3rios p\xfablicos, respostas variadas do Stack Overflow, documenta\xe7\xe3o incompleta e posts antigos de f\xf3runs, "regurgitando o lixo que a gente jogou l\xe1 atr\xe1s" [57, 59, 60].']}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:'"Vibe Coding"'}),": Surgiu uma nova gera\xe7\xe3o de programadores que ",(0,r.jsx)(a.strong,{children:'"idolatram a terceiriza\xe7\xe3o do racioc\xednio"'}),", descrevendo problemas e esperando que a IA os resolva [59, 60]. Essa pr\xe1tica, apelidada de ",(0,r.jsx)(a.strong,{children:'"vibe coding"'}),', \xe9 vista como um "nome bonito para justificar a pregui\xe7a" [60, 61]. Programadores n\xe3o questionam, apenas copiam, colam e colocam em produ\xe7\xe3o, sem entender l\xf3gica, arquitetura, refatora\xe7\xe3o, escalabilidade ou performance [59-62]. A filosofia \xe9 que "pensar demais atrasa", "estudar boas pr\xe1ticas \xe9 perda de tempo" e "arquitetura \xe9 frescura" [60, 61].']}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Consequ\xeancia Atual"}),': O c\xf3digo nas empresas est\xe1 se tornando uma "colcha de retalhos imprevis\xedvel", imposs\xedvel de dar manuten\xe7\xe3o e refatorar, levando a sistemas fr\xe1geis, lentos e cheios de c\xf3digo gerado sem sentido [62]. Isso cria um ',(0,r.jsx)(a.strong,{children:"ciclo de mediocridade que se retroalimenta"}),", onde a IA continua aprendendo com os novos c\xf3digos gerados por ela mesma e n\xe3o verificados pelos desenvolvedores [62]. A ",(0,r.jsx)(a.strong,{children:"pr\xf3xima grande crise do software"}),' j\xe1 n\xe3o \xe9 uma possibilidade, mas "quest\xe3o de tempo" [60, 63].']}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"o-caminho-\xe0-frente-responsabilidade-e-conhecimento",children:"O Caminho \xe0 Frente: Responsabilidade e Conhecimento"}),"\n",(0,r.jsxs)(a.p,{children:["Para resgatar a engenharia de software, \xe9 crucial entender que a profiss\xe3o de programador n\xe3o ser\xe1 destru\xedda pela IA, mas sim pela ",(0,r.jsx)(a.strong,{children:'pregui\xe7a e pela "burrice"'})," [63-65]. A IA apenas reflete, n\xe3o decide, n\xe3o pensa, n\xe3o projeta sistemas e n\xe3o compreende o dom\xednio ou a empatia pelo usu\xe1rio; esse papel ainda pertence ao ",(0,r.jsx)(a.strong,{children:"engenheiro, programador e arquiteto de software"})," [64, 65]."]}),"\n",(0,r.jsx)(a.p,{children:"O caminho para o futuro da engenharia de software envolve:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Resgatar a responsabilidade t\xe9cnica"})," [64, 65]."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Voltar a estudar os fundamentos"})," [64, 65]."]}),"\n",(0,r.jsxs)(a.li,{children:["Desenvolver ",(0,r.jsx)(a.strong,{children:"pensamento cr\xedtico"})," e capacidade de avalia\xe7\xe3o [65, 66]."]}),"\n",(0,r.jsxs)(a.li,{children:["Ter ",(0,r.jsx)(a.strong,{children:'"vergonha na cara" ao escrever c\xf3digo'}),", priorizando a qualidade e a clareza [66, 67]."]}),"\n",(0,r.jsxs)(a.li,{children:["Compreender o ",(0,r.jsx)(a.strong,{children:"impacto do software em sistemas cr\xedticos"})," (hospitais, carros aut\xf4nomos, avi\xf5es) [66, 67]."]}),"\n",(0,r.jsxs)(a.li,{children:["Buscar o ",(0,r.jsx)(a.strong,{children:"significado por tr\xe1s dos fatos"}),", conectando-se ao prop\xf3sito do neg\xf3cio [67, 68]."]}),"\n",(0,r.jsxs)(a.li,{children:["Equilibrar ",(0,r.jsx)(a.strong,{children:"estrat\xe9gia e arquitetura"})," no contexto de cada projeto, buscando a simplicidade e projetando para a mudan\xe7a [69, 70]."]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"material-complementar",children:"Material Complementar"}),"\n",(0,r.jsx)(a.p,{children:"Voc\xea pode baixar o resumo em PDF clicando aqui:"}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"T\xedtulo do Material"}),(0,r.jsx)(a.th,{children:"Tipo"}),(0,r.jsx)(a.th,{children:"Link"})]})}),(0,r.jsx)(a.tbody,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"Apresenta\xe7\xe3o em sala de aula"}),(0,r.jsx)(a.td,{children:"PDF"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:o(4902).A+"",children:"Download"})})]})})]})]})}function m(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,a,o)=>{o.d(a,{R:()=>n,x:()=>d});var s=o(6540);const r={},i=s.createContext(r);function n(e){const a=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);