"use strict";(self.webpackChunkfatec_tte_3_ads_202502=self.webpackChunkfatec_tte_3_ads_202502||[]).push([[5664],{98:(e,a,s)=>{s.d(a,{A:()=>o});const o=s.p+"assets/files/001-material_referencia-1179df3f4f56d8fd4f867e803d98a858.pdf"},6338:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>t,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"ISO100/escalonamento","title":"Escalonamento de processos","description":"Conceitos sobre escalonamento de processos","source":"@site/docs/ISO100/006-escalonamento.md","sourceDirName":"ISO100","slug":"/ISO100/escalonamento","permalink":"/fatec-tte-3ads-202502/docs/ISO100/escalonamento","draft":false,"unlisted":false,"editUrl":"https://github.com/jcristiano/fatec-tte-3ads-202502/tree/main/docs/ISO100/006-escalonamento.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Escalonamento de processos","description":"Conceitos sobre escalonamento de processos"},"sidebar":"tutorialSidebar","previous":{"title":"Laboratorio","permalink":"/fatec-tte-3ads-202502/docs/ISO100/implementacao/play-with-docker"}}');var r=s(4848),i=s(8453);const n={sidebar_position:6,title:"Escalonamento de processos",description:"Conceitos sobre escalonamento de processos"},t="Escalonamento de Tarefas em Sistemas Operacionais",d={},c=[{value:"Por que o Escalonamento \xe9 Crucial?",id:"por-que-o-escalonamento-\xe9-crucial",level:2},{value:"Tipos de Tarefas",id:"tipos-de-tarefas",level:2},{value:"Por Comportamento Temporal",id:"por-comportamento-temporal",level:3},{value:"Por Uso de Recursos",id:"por-uso-de-recursos",level:3},{value:"Objetivos e M\xe9tricas do Escalonamento",id:"objetivos-e-m\xe9tricas-do-escalonamento",level:2},{value:"Escalonamento Preemptivo vs. Cooperativo",id:"escalonamento-preemptivo-vs-cooperativo",level:2},{value:"Algoritmos Cl\xe1ssicos de Escalonamento",id:"algoritmos-cl\xe1ssicos-de-escalonamento",level:2},{value:"Defini\xe7\xe3o de Prioridades",id:"defini\xe7\xe3o-de-prioridades",level:2},{value:"Escalonadores Modernos (Exemplo: Linux)",id:"escalonadores-modernos-exemplo-linux",level:2},{value:"Conclus\xe3o",id:"conclus\xe3o",level:2},{value:"Material Complementar",id:"material-complementar",level:2}];function l(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"escalonamento-de-tarefas-em-sistemas-operacionais",children:"Escalonamento de Tarefas em Sistemas Operacionais"})}),"\n",(0,r.jsx)(a.p,{children:"O escalonamento de tarefas \xe9 um componente vital em sistemas operacionais, respons\xe1vel por determinar a ordem de execu\xe7\xe3o das tarefas prontas. Ele impacta diretamente o desempenho, a responsividade e a justi\xe7a do sistema, gerenciando recursos limitados entre m\xfaltiplas tarefas concorrentes."}),"\n",(0,r.jsx)(a.h2,{id:"por-que-o-escalonamento-\xe9-crucial",children:"Por que o Escalonamento \xe9 Crucial?"}),"\n",(0,r.jsx)(a.p,{children:"O algoritmo de escalonamento influencia o comportamento fundamental do sistema. Diferentes cen\xe1rios exigem otimiza\xe7\xf5es espec\xedficas: aplica\xe7\xf5es interativas demandam baixa lat\xeancia, o processamento de dados busca alta efici\xeancia, e sistemas cr\xedticos requerem previsibilidade temporal."}),"\n",(0,r.jsx)(a.h2,{id:"tipos-de-tarefas",children:"Tipos de Tarefas"}),"\n",(0,r.jsx)(a.p,{children:"As tarefas podem ser classificadas por seu comportamento temporal e uso de recursos:"}),"\n",(0,r.jsx)(a.h3,{id:"por-comportamento-temporal",children:"Por Comportamento Temporal"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Tempo Real"}),": Exigem previsibilidade rigorosa nos tempos de resposta, sendo cruciais em sistemas de controle industrial e automa\xe7\xe3o. Falhas podem ser catastr\xf3ficas."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Interativas"}),": Respondem rapidamente a eventos externos (usu\xe1rio, rede), mas sem a rigidez do tempo real. Exemplos incluem editores, navegadores e jogos. Focam em uma interface fluida e resposta r\xe1pida ao usu\xe1rio."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Em Lote (Batch)"}),": Executam sem requisitos temporais espec\xedficos, geralmente em segundo plano e sem interven\xe7\xe3o do usu\xe1rio, como backups ou c\xe1lculos cient\xedficos. Focam na efici\xeancia global."]}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"por-uso-de-recursos",children:"Por Uso de Recursos"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"CPU-Bound"}),": Utilizam intensivamente o processador (ex: convers\xe3o de v\xeddeo, c\xe1lculos matem\xe1ticos)."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"I/O-Bound"}),": Dependem principalmente de opera\xe7\xf5es de entrada/sa\xedda (ex: editores, servidores web)."]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"Uma tarefa pode alternar entre esses comportamentos durante sua execu\xe7\xe3o."}),"\n",(0,r.jsx)(a.h2,{id:"objetivos-e-m\xe9tricas-do-escalonamento",children:"Objetivos e M\xe9tricas do Escalonamento"}),"\n",(0,r.jsx)(a.p,{children:"Os escalonadores devem equilibrar objetivos muitas vezes conflitantes:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Tempo de Execu\xe7\xe3o (Turnaround Time)"}),": Tempo total desde a cria\xe7\xe3o at\xe9 o encerramento da tarefa. Crucial para sistemas em lote."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Tempo de Espera (Waiting Time)"}),": Tempo que a tarefa passa na fila de prontos, aguardando o processador."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Tempo de Resposta (Response Time)"}),": Intervalo entre um evento e sua resposta imediata. Fundamental para sistemas interativos."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Justi\xe7a (Fairness)"}),": Distribui\xe7\xe3o equitativa do processador entre tarefas similares."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Efici\xeancia do Sistema"}),": Grau de utiliza\xe7\xe3o do processador na execu\xe7\xe3o de tarefas \xfateis. \xc9 afetada pela velocidade da troca de contexto, quantidade de tarefas I/O-bound e overhead do escalonador."]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"escalonamento-preemptivo-vs-cooperativo",children:"Escalonamento Preemptivo vs. Cooperativo"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Sistemas Preemptivos"}),": O escalonador pode interromper uma tarefa a qualquer momento (fim do quantum, chamada de sistema, interrup\xe7\xe3o de tarefa mais priorit\xe1ria) para reavaliar a fila de prontos. A maioria dos sistemas operacionais modernos \xe9 preemptiva."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Sistemas Cooperativos"}),": A tarefa em execu\xe7\xe3o s\xf3 libera o processador voluntariamente (ao terminar, solicitar I/O ou liberar explicitamente). Exigiam coopera\xe7\xe3o das tarefas e eram comuns em sistemas legados."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"N\xfacleos Preemptivos Modernos"}),": Permitem a preemp\xe7\xe3o de tarefas inclusive no modo n\xfacleo, minimizando a lat\xeancia de resposta, essencial para sistemas de tempo real."]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"algoritmos-cl\xe1ssicos-de-escalonamento",children:"Algoritmos Cl\xe1ssicos de Escalonamento"}),"\n",(0,r.jsx)(a.p,{children:"Esses algoritmos servem de base conceitual para escalonadores modernos:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"First-Come, First-Served (FCFS)"}),': O mais simples, atende as tarefas na ordem de chegada. \xc9 f\xe1cil de implementar e previs\xedvel, mas pode causar o "efeito conv\xe9s", onde tarefas curtas esperam muito tempo atr\xe1s de tarefas longas, sendo ineficiente para sistemas interativos.']}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Round-Robin (RR)"}),": FCFS com preemp\xe7\xe3o por tempo (quantum). Divide o tempo da CPU em fatias iguais, alternando ciclicamente. Garante justi\xe7a entre os processos e boa responsividade, ideal para sistemas interativos, mas sacrifica um pouco da efici\xeancia bruta devido ao maior n\xfamero de trocas de contexto."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Shortest Job First (SJF)"}),": Executa sempre a tarefa mais curta dispon\xedvel. Teoricamente, proporciona os menores tempos m\xe9dios de execu\xe7\xe3o e espera. \xc9 ideal para sistemas em lote onde a dura\xe7\xe3o das tarefas \xe9 conhecida, mas apresenta desafios pr\xe1ticos para estimar a dura\xe7\xe3o futura e risco de inani\xe7\xe3o para tarefas longas."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Shortest Remaining Time First (SRTF)"}),": Vers\xe3o preemptiva do SJF. Compara o tempo restante da tarefa atual com a dura\xe7\xe3o de novas tarefas, interrompendo a execu\xe7\xe3o se uma tarefa mais curta chegar. Oferece os menores tempos m\xe9dios poss\xedveis, mas intensifica o problema de inani\xe7\xe3o e aumenta a complexidade."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Escalonamento por Prioridades"}),": Associa uma prioridade a cada tarefa, geralmente um n\xfamero inteiro, para definir a ordem de execu\xe7\xe3o.","\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Prioridades Fixas (Cooperativo e Preemptivo)"}),": Tarefas de maior prioridade executam primeiro. O preemptivo (PRIOp) melhora as m\xe9tricas em rela\xe7\xe3o ao cooperativo (PRIOc), mas ambos sofrem com o problema de ",(0,r.jsx)(a.strong,{children:"inani\xe7\xe3o"}),", onde tarefas de baixa prioridade podem nunca ser executadas se houver um fluxo constante de tarefas mais priorit\xe1rias."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Prioridades Din\xe2micas com Envelhecimento (Aging)"}),": Uma solu\xe7\xe3o para a inani\xe7\xe3o. Aumenta gradualmente a prioridade de tarefas que aguardam por muito tempo, garantindo que todas eventualmente recebam o processador. Permite uma distribui\xe7\xe3o proporcional do tempo de processamento conforme as prioridades est\xe1ticas."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"defini\xe7\xe3o-de-prioridades",children:"Defini\xe7\xe3o de Prioridades"}),"\n",(0,r.jsx)(a.p,{children:"As prioridades s\xe3o influenciadas por:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Fatores Externos"}),": Informa\xe7\xf5es providas pelo usu\xe1rio ou administrador (classe do usu\xe1rio, n\xedvel de servi\xe7o, import\xe2ncia cr\xedtica)."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Fatores Internos"}),": Dados coletados e estimados pelo sistema (idade da tarefa, dura\xe7\xe3o estimada, interatividade, uso de recursos, envelhecimento)."]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:"Sistemas como Windows e Linux utilizam escalas de prioridade distintas para processos e threads."}),"\n",(0,r.jsx)(a.h2,{id:"escalonadores-modernos-exemplo-linux",children:"Escalonadores Modernos (Exemplo: Linux)"}),"\n",(0,r.jsx)(a.p,{children:"Sistemas operacionais reais combinam m\xfaltiplas pol\xedticas em arquiteturas sofisticadas. O Linux, por exemplo, utiliza uma arquitetura de M\xfaltiplas Filas de Feedback, dividindo as tarefas em classes de escalonamento, cada uma com sua fila e algoritmo espec\xedfico."}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Classes de Escalonamento do Linux"}),":","\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"SCHED_DEADLINE"}),": Para tarefas de tempo real com prazos, usando o algoritmo Earliest Deadline First (EDF)."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"SCHED_FIFO"}),"/",(0,r.jsx)(a.code,{children:"SCHED_RR"}),": Prioridades fixas sem/com quantum, respectivamente, para tempo real."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"SCHED_NORMAL"}),"/",(0,r.jsx)(a.code,{children:"SCHED_OTHER"}),": Classe padr\xe3o para tarefas interativas, implementando o Completely Fair Scheduler (CFS)."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"SCHED_BATCH"}),": Similar ao NORMAL, otimizada para tarefas CPU-bound."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"SCHED_IDLE"}),": Menor prioridade, executa apenas se n\xe3o houver outras tarefas ativas."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(a.p,{children:["O ",(0,r.jsx)(a.strong,{children:"Completely Fair Scheduler (CFS)"}),", usado nas classes interativas, mant\xe9m tarefas em uma \xe1rvore rubro-negra ordenada por tempo de processamento realizado, garantindo que a tarefa com menor tempo acumulado seja sempre escolhida. Ele foca na justi\xe7a e proporcionalidade, adaptando-se dinamicamente \xe0 carga."]}),"\n",(0,r.jsx)(a.h2,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,r.jsx)(a.p,{children:"A escolha do algoritmo de escalonamento \xe9 uma decis\xe3o arquitetural fundamental. Enquanto SRTF oferece as melhores m\xe9tricas de tempo m\xe9dio, RR se destaca em responsividade. A preemp\xe7\xe3o geralmente aumenta as trocas de contexto, mas melhora os tempos m\xe9dios e a interatividade. Compreender esses fundamentos \xe9 essencial para projetar e otimizar sistemas operacionais eficientes que atendam aos requisitos espec\xedficos de cada aplica\xe7\xe3o."}),"\n",(0,r.jsx)(a.h2,{id:"material-complementar",children:"Material Complementar"}),"\n",(0,r.jsxs)(a.table,{children:[(0,r.jsx)(a.thead,{children:(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.th,{children:"T\xedtulo do Material"}),(0,r.jsx)(a.th,{children:"Tipo"}),(0,r.jsx)(a.th,{children:"Link"})]})}),(0,r.jsxs)(a.tbody,{children:[(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"Apresenta\xe7\xe3o em sala de aula"}),(0,r.jsx)(a.td,{children:"PDF"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(9801).A+"",children:"Download"})})]}),(0,r.jsxs)(a.tr,{children:[(0,r.jsx)(a.td,{children:"Livro texto para refer\xeancia"}),(0,r.jsx)(a.td,{children:"PDF"}),(0,r.jsx)(a.td,{children:(0,r.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(98).A+"",children:"Download"})})]})]})]})]})}function m(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,a,s)=>{s.d(a,{R:()=>n,x:()=>t});var o=s(6540);const r={},i=o.createContext(r);function n(e){const a=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),o.createElement(i.Provider,{value:a},e.children)}},9801:(e,a,s)=>{s.d(a,{A:()=>o});const o=s.p+"assets/files/001-Escalonamento-de-Tarefas-em-Sistemas-Operacionais-af1d7216f0b94513ba5b2e02fd9a7205.pdf"}}]);